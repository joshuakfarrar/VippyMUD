module ::Guard
  class Vippymud < Plugin
    def start
      puts "Starting VippyMUD on port #{port}"
      @server = VippyMUD::Server.new(port)
      @server.start
    end

    def stop
      @server.stop
    end

    def reload
      stop
      start
    end

    def run_on_modifications(paths)
      paths.each do |path|
        load path
      end
      reload
    end

    private

    def port
      options.fetch(:port){8080}
    end
  end
end

guard :vippymud do
  load './lib/server.rb'
  watch(%r{\.rb})
end

# Note: The cmd option is now required due to the increasing number of ways
#       rspec may be run, below are examples of the most common uses.
#  * bundler: 'bundle exec rspec'
#  * bundler binstubs: 'bin/rspec'
#  * spring: 'bin/rspec' (This will use spring if running and you have
#                          installed the spring binstubs per the docs)
#  * zeus: 'zeus rspec' (requires the server to be started separately)
#  * 'just' rspec: 'rspec'

# guard :rspec, cmd: "echo 'hi!'" do
guard :rspec, cmd: "bundle exec rspec" do
  require "guard/rspec/dsl"
  dsl = Guard::RSpec::Dsl.new(self)

  # Feel free to open issues for suggestions and improvements

  # RSpec files
  rspec = dsl.rspec
  watch(rspec.spec_helper) { rspec.spec_dir }
  watch(rspec.spec_support) { rspec.spec_dir }
  watch(rspec.spec_files)

  # Ruby files
  ruby = dsl.ruby
  puts "watching #{ruby.lib_files}"
  dsl.watch_spec_files_for(ruby.lib_files)
end
